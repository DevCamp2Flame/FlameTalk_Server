server:
  port: 8085

spring:
  application:
    name: chat # 유레카에 등록할 서비스의 논리 이름
    profiles:
      active:
        default
    cloud:
      config:
        enabled: true

  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: devcamp-flame
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  data:
    cassandra:
      port: 9042
      contact-points: 127.0.0.1
      schemaAction: CREATE_IF_NOT_EXISTS
      keyspace-name: flametalk
      local-datacenter: datacenter1

eureka:
  instance:
    hostname: chat
    prefer-ip-address: true
  client:
    register-with-eureka: true # 유레카에 서비스 등록
    fetch-registry: true      # 유레카 서비스 위치
    service-url:
      defaultZone: http://localhost:8761/eureka/ # 레지스트리 사본을 로컬로 가져오기
